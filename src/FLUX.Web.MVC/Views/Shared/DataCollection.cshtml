@model FLUX.DomainObjects.DataCollection
@*was soll passieren ? 
wir machen nur noch layer key geraffel 
wir soll jetzt einen wert rendern 
also 

title
    value
    value

wir brauchen ein 1 input feld - immer damit weggesposted wird 

aber nur das erste feld muss input sein 
der rest wie ggewohn span 

wenn der erste wert null ist 
nimm original value*@ 

@{ bool first = true; }
@foreach (var layerValue in Model.LayerValues)
{
    <span class="valueLine">
        
        @Html.Partial("ColorBlock", layerValue.ColorCodeActiveFlags)
        
        <div class="textContent">
            @if (first)
            {
                string classes = "spanLook";
                if (layerValue.Value == null)
                {
                    classes += " invalid";
                }
                <input name="@Model.PostbackName" class="@classes" value="@layerValue.Value" />
                first = false;
            }
            else
            {
                <text>@layerValue.Value</text>
            }
        </div>
        <div class="cfix"></div>
    </span>
}

@*@if (Model.LayerValues.Count == 0)
{
    <span>
        <input type="text" name="@Model.PostbackName" class="inValid" />
    </span>
}
else
{
    var dict = new Dictionary<string, FooBaz>(StringComparer.CurrentCultureIgnoreCase);

    for (int i = 0; i < Model.LayerValues.Count; i++)
    {
        var layer = Model.LayerValues[i];

        FooBaz container;

        if(!dict.TryGetValue(layer, out container))
        {
            container = new FooBaz();
            dict.Add(layer, container); // neu 
        }

        container.Count++;

        container.ColorFlags.AppendFormat("<div class='colorMarker color{0}'></div>", i);
        container.Content.AppendFormat("<span class='' >");
        if (i == 0)
        {
            container.Content.Append("<input ");

        }



        <div>
            @for (int j = 0; j < 3; j++)
            {
                <div class="colorMarker color@(j)"></div>
            }
            }








            <span class="layer@(i)">
                @if (i == 0)
                {
                    string classN = "spanLook";
                    if (string.IsNullOrEmpty(layer) && Model.IsLastElement)
                    {
                        layer = Model.OriginalValue;
                        classN += " inValid";
                    }
                    <input type="text" name="@Model.PostbackName" class="@classN" value="@layer" />
                }
                else
                {
                    <text>@layer</text>
                }
            </span>
            <div class="clearfix"></div>

        </div>
    }
}*@
